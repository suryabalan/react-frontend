[{"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\CreateHospitalComponent.jsx":"4","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\ListHospitalComponent.jsx":"5","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\HeaderComponent.jsx":"6","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\ViewHospitalComponent.jsx":"7","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\ListDistrictComponent.jsx":"8","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\BookHospitalComponent.jsx":"9","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\ListStateComponent.jsx":"10","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\ListHospitalsInDistrictComponent.jsx":"11","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\services\\HospitalService.js":"12","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\services\\PatientService.js":"13","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\Video\\Video.js":"14","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\CallObjectContext.js":"15","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\api.js":"16","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\logUtils.js":"17","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\urlUtils.js":"18","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\Call\\Call.js":"19","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\StartButton\\StartButton.js":"20","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\Tray\\Tray.js":"21","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\Call\\callState.js":"22","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\Tile\\Tile.js":"23","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\CallMessage\\CallMessage.js":"24","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\TrayButton\\TrayButton.js":"25","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\Icon\\Icon.js":"26","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\history.js":"27","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\SignUp.js":"28","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\SignIn.js":"29","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\HomePage\\Blog.js":"30","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\HomePage\\Main.js":"31","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\HomePage\\Footer.js":"32","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\HomePage\\Header.js":"33","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\HomePage\\MainFeaturedPost.js":"34","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\HomePage\\Sidebar.js":"35","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\HomePage\\FeaturedPost.js":"36","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\HomePage\\Markdown.js":"37","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\HomePage\\history.js":"38"},{"size":553,"mtime":1618389911099,"results":"39","hashOfConfig":"40"},{"size":2233,"mtime":1619199832641,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":499162500000,"results":"42","hashOfConfig":"40"},{"size":4354,"mtime":1611426070840,"results":"43","hashOfConfig":"40"},{"size":3365,"mtime":1617776938078,"results":"44","hashOfConfig":"40"},{"size":474,"mtime":1611385154768,"results":"45","hashOfConfig":"40"},{"size":17346,"mtime":1618862097286,"results":"46","hashOfConfig":"40"},{"size":1951,"mtime":1612528155408,"results":"47","hashOfConfig":"40"},{"size":5774,"mtime":1618379311254,"results":"48","hashOfConfig":"40"},{"size":1887,"mtime":1618378302477,"results":"49","hashOfConfig":"40"},{"size":3008,"mtime":1617965783738,"results":"50","hashOfConfig":"40"},{"size":1206,"mtime":1621523929332,"results":"51","hashOfConfig":"40"},{"size":554,"mtime":1621511853362,"results":"52","hashOfConfig":"40"},{"size":7252,"mtime":1618405743950,"results":"53","hashOfConfig":"40"},{"size":69,"mtime":1618393511132,"results":"54","hashOfConfig":"40"},{"size":1063,"mtime":1618393460377,"results":"55","hashOfConfig":"40"},{"size":82,"mtime":1607976795000,"results":"56","hashOfConfig":"40"},{"size":342,"mtime":1607976795000,"results":"57","hashOfConfig":"40"},{"size":4853,"mtime":1618424575436,"results":"58","hashOfConfig":"40"},{"size":355,"mtime":1618424797252,"results":"59","hashOfConfig":"40"},{"size":3539,"mtime":1618424989526,"results":"60","hashOfConfig":"40"},{"size":4699,"mtime":1618424598892,"results":"61","hashOfConfig":"40"},{"size":1653,"mtime":1618424928082,"results":"62","hashOfConfig":"40"},{"size":386,"mtime":1618424672744,"results":"63","hashOfConfig":"40"},{"size":694,"mtime":1618425048162,"results":"64","hashOfConfig":"40"},{"size":5863,"mtime":1618424732632,"results":"65","hashOfConfig":"40"},{"size":86,"mtime":1619164497303,"results":"66","hashOfConfig":"40"},{"size":4202,"mtime":1619233958766,"results":"67","hashOfConfig":"40"},{"size":3460,"mtime":1619181642251,"results":"68","hashOfConfig":"40"},{"size":3924,"mtime":1619196559750,"results":"69","hashOfConfig":"40"},{"size":926,"mtime":1617167152000,"results":"70","hashOfConfig":"40"},{"size":1336,"mtime":1619196305168,"results":"71","hashOfConfig":"40"},{"size":1959,"mtime":1619200322712,"results":"72","hashOfConfig":"40"},{"size":2018,"mtime":1617167152000,"results":"73","hashOfConfig":"40"},{"size":1809,"mtime":1617167152000,"results":"74","hashOfConfig":"40"},{"size":1718,"mtime":1617167152000,"results":"75","hashOfConfig":"40"},{"size":1156,"mtime":1617189371928,"results":"76","hashOfConfig":"40"},{"size":86,"mtime":1619200317726,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1f3km2t",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\index.js",[],["159","160"],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\App.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\CreateHospitalComponent.jsx",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\ListHospitalComponent.jsx",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\HeaderComponent.jsx",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\ViewHospitalComponent.jsx",["161","162","163","164"],"import React, { Component } from 'react';\r\nimport HospitalService from '../services/HospitalService';\r\nimport PatientService from '../services/PatientService';\r\n\r\nimport Video from './Video/Video';\r\nimport {\r\n  Card, CardHeader, CardBody, Form, FormGroup, Label, Input, FormText, Button, Alert\r\n} from 'reactstrap'\r\nconst styles = { \"backgroundColor\": \"#007bff\", \"color\": \"#ffffff\", \"cursor\": \"pointer\" };\r\nclass ViewHospitalComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            hospital: {},\r\n            vadamalayan: [],\r\n            showBody: false,\r\n            Pname: \"\",\r\n            Age: \"\",\r\n            Gender: \"\",\r\n            Date: \"\",\r\n            Time: \"\",\r\n            Problem: \"\",\r\n            Dname: \"\",\r\n            formErrors: false,\r\n            hospUrl : '',\r\n            Hid: this.props.match.params.id\r\n        }\r\n        this.addPatientNameHandler = this.addPatientNameHandler.bind(this);\r\n        this.addAgeHandler = this.addAgeHandler.bind(this);\r\n        this.addGenderHandler=this.addGenderHandler.bind(this);\r\n        this.addDateHandler = this.addDateHandler.bind(this);\r\n        this.addTimeHandler = this.addTimeHandler.bind(this);\r\n        this.addDnameHandler = this.addDnameHandler.bind(this);\r\n        this.addProblemHandler = this.addProblemHandler.bind(this);\r\n        this.savePatient = this.savePatient.bind(this);\r\n        this.cancel = this.cancel.bind(this);\r\n    }\r\n    toggleBody = () => {\r\n    this.setState({\r\n      showBody: !this.state.showBody\r\n    });\r\n  }\r\n  addPatientNameHandler= (event) => {\r\n        this.setState({Pname: event.target.value});\r\n    }\r\n\r\n    addAgeHandler= (event) => {\r\n        this.setState({Age: event.target.value});\r\n    }\r\n    addGenderHandler= (event) => {\r\n      this.setState({Gender: event.target.value})\r\n    }\r\n    addDateHandler= (event) => {\r\n      this.setState({Date: event.target.value})\r\n    }\r\n    addTimeHandler= (event) => {\r\n      this.setState({Time: event.target.value})\r\n    }\r\n    addDnameHandler= (event) => {\r\n      this.setState({Dname: event.target.value})\r\n    }\r\n    addProblemHandler= (event) => {\r\n      this.setState({Problem: event.target.value})\r\n    }\r\n  savePatient = (e) => {\r\n    e.preventDefault();\r\n  \r\n    \r\n      let virtual = { Hid: this.state.Hid, Pname: this.state.Pname, Age: this.state.Age, Gender: this.state.Gender, Date: this.state.Date, Time: this.state.Time, Dname: this.state.Dname, Problem: this.state.Problem };\r\n      \r\n    \r\n    PatientService.createVpatient(virtual).then(res => {\r\n            HospitalService.changeTotalNumBedsById(this.state.hospital_id).then(res => {\r\n                this.props.history.push('/');\r\n                \r\n            })\r\n        });\r\n\r\n  }\r\n  cancel () {\r\n        this.props.history.push('/');\r\n    }\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  }\r\n    componentDidMount(){\r\n        HospitalService.getHospitalById(this.state.id).then(res => {\r\n            this.setState({hospital: res.data});\r\n            this.setState({hospUrl: \"https://maps.google.com/maps?q=\" + this.state.hospital.location_coordinates + \"&t=&z=13&ie=UTF8&iwloc=&output=embed\"});\r\n        });\r\n        HospitalService.getVdHospitals().then(res => {\r\n            this.setState({vadamalayan: res.data});\r\n            \r\n        });\r\n    }\r\n\r\n    render() {\r\n        let displayBody = {\r\n      display: this.state.showBody ? 'block' : 'none'\r\n    };\r\n    let errors = {\r\n      display: this.state.formErrors ? 'block' : 'none'\r\n    };\r\n     if(this.state.id==23501)\r\n     {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">States</h2>\r\n                <div className = \"row\">\r\n                    <table className = \"table table-striped table-bordered\">\r\n                        <thead>\r\n                            <tr>                          \r\n                                <th>Doctors</th>\r\n                                <th>Departments</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {\r\n                                this.state.vadamalayan.map(\r\n                                    st => \r\n                                    <tr>\r\n                                        <td>{st.doctors}</td>                                  \r\n                                        <td>{st.departments}</td> \r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    <div class=\"row row-cols-1 row-cols-md-2 g-4\">\r\n                <div class=\"col\">\r\n                    <div class=\"card\" style = {{marginTop : \"20px\"}}>                        \r\n                            <div class=\"card-body\">\r\n                                <h3 class=\"card-title\">Hospital Details</h3>                                \r\n                            </div>\r\n                                <ul class=\"list-group list-group-flush\">\r\n                                    <li class=\"list-group-item\">{this.state.hospital.hospital_name}</li>\r\n                                    <li class=\"list-group-item\">{this.state.hospital.location}</li>\r\n                                    <li class=\"list-group-item\">{this.state.hospital.district}</li>\r\n                                    <li class=\"list-group-item\">{this.state.hospital.state}</li>\r\n                                    <li class=\"list-group-item\">{this.state.hospital.pincode}</li>                          \r\n                                </ul>    \r\n                    </div>\r\n                </div>\r\n               \r\n                <div class=\"col\">\r\n                    <div class=\"card\" style = {{marginTop: \"20px\"}}>\r\n                     <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">Total Number Of Beds Available</h5>\r\n                        <h1 class=\"card-title\">{this.state.hospital.total_num_beds}</h1>\r\n                    </div>\r\n                    </div>\r\n                </div>     \r\n\r\n                <div class = \"col\"></div>\r\n\r\n                <div class = \"col\">\r\n                    <div id=\"map-container-google-1\" class=\"z-depth-1-half map-container\"  style={{height: \"500px\"}}>                        \r\n                        <iframe src={this.state.hospUrl} frameborder=\"0\" style={{border: \"0\"}} allowfullscreen></iframe>\r\n                    \r\n            \r\n           <Card className=\"mt-4 mb-4 card-border\" outline color=\"primary\" >\r\n        <CardHeader style={styles} onClick={this.toggleBody}><i className=\"fas fa-plus\"></i> Add New Appointment</CardHeader>\r\n        <CardBody style={displayBody} id=\"aptBody\">\r\n          <FormText color=\"muted\" className=\"mb-1\">\r\n            <span className=\"text-danger\">*</span>All fields are required\r\n          </FormText>\r\n          <Form onSubmit={this.save}>\r\n            <FormGroup>\r\n              <Label for=\"Pname\">Patient Name</Label>\r\n              <Input type=\"text\" id=\"Pname\" placeholder=\"Patient's name\" value={this.state.Pname} name=\"Pname\" onChange={this.handleChange} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"Age\">Age</Label>\r\n              <Input type=\"number\" id=\"Age\" placeholder=\"Patient's age\" value={this.state.Age} name=\"Age\" onChange={this.handleChange} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"Gender\">Gender</Label>\r\n              <Input type=\"select\" id=\"Gender\" value={this.state.Gender} name=\"Gender\" onChange={this.handleChange} >\r\n                <option>Select gender</option>\r\n                <option>Male</option>\r\n                <option>Female</option>\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"Date\">Date</Label>\r\n              <Input type=\"date\" id=\"Date\" value={this.state.Date} name=\"Date\" onChange={this.handleChange} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"Time\">Time</Label>\r\n              <Input type=\"time\" id=\"Time\" value={this.state.Time} name=\"Time\" onChange={this.handleChange} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"Dname\">Doctor Name</Label>\r\n              <Input type=\"select\" id=\"Dname\" value={this.state.Dname} name=\"Dname\" onChange={this.handleChange} >\r\n                <option>Select doctor name</option>\r\n                <option>Dr. S Sathish Kumar</option>\r\n                <option>Dr. V Amuthan</option>\r\n                <option>Dr. CPM Chandrasekar</option>\r\n                <option>Dr. BRJ Kannan</option>\r\n                <option>Dr. J Sathish Kinne</option>\r\n                <option>Dr. K Lakshmi Priya</option>\r\n                <option>Dr. S Alagu Ganesh</option>\r\n                <option>Dr. P Vinod</option>\r\n                <option>Dr. M Dheepha</option>\r\n                <option>Dr. V Raja Gopalan</option>\r\n                <option>Dr. M Srinivasan</option>\r\n                <option>Dr. M Ganapathivel Kannnan</option>\r\n                <option>Dr. DN Sharmila</option>\r\n                <option>Dr. James Pandian</option>\r\n                <option>Dr. N Prithiviraj</option>\r\n                <option>Dr. M Ravinarayanan</option>\r\n                <option>Dr. G Ganesh Prabhu</option>\r\n                <option>Dr. V Jeyakodish</option>\r\n                <option>Dr. N Parvatha Sundarai</option>\r\n                <option>Dr. RM Hemnath</option>\r\n                <option>Dr. M Kavitha</option>\r\n                <option>Dr. SC Vivekanandhan</option>\r\n                <option>Dr. M Kannan</option>\r\n                <option>Dr. RT Narendhran</option>\r\n                <option>Dr. P Amudha Rajeshwari</option>\r\n                <option>Dr. S Sridhar</option>\r\n                <option>Dr. Ganesh Pandian</option>\r\n                <option>Dr. D Ashok Kumar</option>\r\n                <option>Dr. D David Praveen Kumar</option>\r\n                <option>Dr. R Sivanantham</option>\r\n                <option>Dr. M Chidambaram</option>\r\n                <option>Dr. R Vetri Nallathambi</option>\r\n                <option>Dr. A Anand Kumar</option>\r\n                <option>Dr. C Justin</option>\r\n                <option>Dr. G Geetha Rani</option>\r\n                <option>Dr. A Jegan</option>\r\n                <option>Dr. SS Rajendran</option>\r\n                <option>Dr. MK Mothilal</option>\r\n                <option>Dr. J Sundarapandian</option>\r\n                <option>Dr. Vijayaraghavan RL</option>\r\n                <option>Dr. V Pappunathan</option>\r\n                <option>Dr. S Sowmiya Prithiviraj</option>\r\n                <option>Dr. P Sivalingam</option>\r\n                <option>Dr. S Thahseen Nilofar</option>\r\n                <option>Dr. I Selvamani</option>\r\n                <option>Dr. T Kumanan</option>\r\n                <option>Dr. T Lakshmi Devi</option>\r\n                <option>Dr. M Amarnath</option>\r\n                <option>Dr. V Meenakshi Sundaram</option>\r\n                <option>Dr. K Muralidharan</option>\r\n                <option>Dr. Durga R</option>\r\n                <option>Dr. C Vignesh</option>\r\n                <option>Dr. SJV Gnanaraj</option>\r\n                <option>Dr. Moses K Daniel</option>\r\n                <option>Dr. S Elamparithi</option>\r\n                <option>Dr. S Rajendran</option>\r\n                \r\n\r\n\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"Problem\">Problem</Label>\r\n              <Input type=\"textarea\" id=\"Problem\" placeholder=\"Notes\" value={this.state.Problem} name=\"Problem\" onChange={this.handleChange} />\r\n            </FormGroup>\r\n            <Alert color=\"danger\" style={errors}>\r\n              Please fill all the details\r\n          </Alert>\r\n            <Button type=\"submit\" color=\"primary\" block onClick = {this.savePatient}>Add Appointment</Button>\r\n            \r\n          </Form>\r\n        </CardBody>\r\n      </Card > \r\n      <Button color=\"primary\"  onClick={() => this.props.history.push('/Video')}>Virtual Appointment</Button>   \r\n        </div>\r\n                </div>                    \r\n            </div>        \r\n                    \r\n                </div>\r\n            </div>\r\n           \r\n        );\r\n     }\r\n     else{\r\n\r\n     \r\n        return (\r\n            \r\n            <div class=\"row row-cols-1 row-cols-md-2 g-4\">\r\n                <div class=\"col\">\r\n                    <div class=\"card\" style = {{marginTop : \"20px\"}}>                        \r\n                            <div class=\"card-body\">\r\n                                <h3 class=\"card-title\">Hospital Details</h3>                                \r\n                            </div>\r\n                                <ul class=\"list-group list-group-flush\">\r\n                                    <li class=\"list-group-item\">{this.state.hospital.hospital_name}</li>\r\n                                    <li class=\"list-group-item\">{this.state.hospital.location}</li>\r\n                                    <li class=\"list-group-item\">{this.state.hospital.district}</li>\r\n                                    <li class=\"list-group-item\">{this.state.hospital.state}</li>\r\n                                    <li class=\"list-group-item\">{this.state.hospital.pincode}</li>                          \r\n                                </ul>    \r\n                    </div>\r\n                </div>\r\n               \r\n                <div class=\"col\">\r\n                    <div class=\"card\" style = {{marginTop: \"20px\"}}>\r\n                     <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">Total Number Of Beds Available</h5>\r\n                        <h1 class=\"card-title\">{this.state.hospital.total_num_beds}</h1>\r\n                    </div>\r\n                    </div>\r\n                </div>     \r\n\r\n                <div class = \"col\"></div>\r\n\r\n                <div class = \"col\">\r\n                    <div id=\"map-container-google-1\" class=\"z-depth-1-half map-container\"  style={{height: \"500px\"}}>                        \r\n                        <iframe src={this.state.hospUrl} frameborder=\"0\" style={{border: \"0\"}} allowfullscreen></iframe>\r\n                    \r\n            \r\n           <Card className=\"mt-4 mb-4 card-border\" outline color=\"primary\" >\r\n        <CardHeader style={styles} onClick={this.toggleBody}><i className=\"fas fa-plus\"></i> Add New Appointment</CardHeader>\r\n\r\n         \r\n        \r\n        \r\n        <CardBody style={displayBody} id=\"aptBody\">\r\n          <FormText color=\"muted\" className=\"mb-1\">\r\n            <span className=\"text-danger\">*</span>All fields are required\r\n          </FormText>\r\n          <Form>\r\n            <FormGroup>\r\n              <Label for=\"Pname\">Patient Name</Label>\r\n              <Input type=\"text\" id=\"Pname\" placeholder=\"Patient's name\" value={this.state.Pname} name=\"Pname\" onChange={this.handleChange} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"Age\">Age</Label>\r\n              <Input type=\"number\" id=\"Age\" placeholder=\"Patient's age\" value={this.state.Age} name=\"Age\" onChange={this.handleChange} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"Gender\">Gender</Label>\r\n              <Input type=\"select\" id=\"Gender\" value={this.state.Gender} name=\"Gender\" onChange={this.handleChange} >\r\n                <option>Select gender</option>\r\n                <option>Male</option>\r\n                <option>Female</option>\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"Date\">Date</Label>\r\n              <Input type=\"date\" id=\"Date\" value={this.state.Date} name=\"Date\" onChange={this.handleChange} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"Time\">Time</Label>\r\n              <Input type=\"time\" id=\"Time\" value={this.state.Time} name=\"Time\" onChange={this.handleChange} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"Dname\">Doctor Name</Label>\r\n              <Input type=\"select\" id=\"Dname\" value={this.state.Dname} name=\"Dname\" onChange={this.handleChange} >\r\n                <option>Select doctor name</option>\r\n                <option>Dr. S Sathish Kumar</option>\r\n                <option>Dr. V Amuthan</option>\r\n                \r\n\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"Problem\">Problem</Label>\r\n              <Input type=\"textarea\" id=\"Problem\" placeholder=\"Notes\" value={this.state.Problem} name=\"Problem\" onChange={this.handleChange} />\r\n            </FormGroup>\r\n            <Alert color=\"danger\" style={errors}>\r\n              Please fill all the details\r\n          </Alert>\r\n            <Button type=\"submit\" color=\"primary\" onClick = {this.savePatient}>Add Appointment</Button>\r\n          </Form>\r\n        </CardBody>\r\n      </Card >  \r\n      <Button color=\"primary\" onClick={() => this.props.history.push('/Video')}>Virtual Appointment</Button> \r\n        </div>\r\n        \r\n                </div>                    \r\n            </div>        \r\n        );\r\n     }\r\n    }\r\n}\r\n\r\nexport default ViewHospitalComponent;\r\n\r\n\r\n","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\ListDistrictComponent.jsx",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\BookHospitalComponent.jsx",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\ListStateComponent.jsx",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\ListHospitalsInDistrictComponent.jsx",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\services\\HospitalService.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\services\\PatientService.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\Video\\Video.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\CallObjectContext.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\api.js",["165"],"\r\nconst newRoomEndpoint =\r\n  'https://fu6720epic.execute-api.us-west-2.amazonaws.com/default/dailyWwwApiDemoNewCall';\r\n\r\n/**\r\n * Create a short-lived room for demo purposes.\r\n *\r\n * IMPORTANT: this is purely a \"demo-only\" API, and *not* how we recommend\r\n * you create rooms in real production code. In your code, we recommend that you:\r\n * - Create rooms by invoking the Daily REST API from your own backend server\r\n *   (or from the Daily dashboard if you're OK with creating rooms manually).\r\n * - Pass an \"exp\" (expiration) parameter to the Daily REST endpoint so you\r\n *   don't end up with a huge number of live rooms.\r\n *\r\n * See https://docs.daily.co/reference#create-room for more information on how\r\n * to use the Daily REST API to create rooms.\r\n */\r\nasync function createRoom() {\r\n  let response = await fetch(newRoomEndpoint),\r\n    room = await response.json();\r\n  return room;\r\n\r\n  // Comment out the above and uncomment the below, using your own URL\r\n  // return { url: \"https://your-domain.daily.co/hello\" };\r\n}\r\n\r\nexport default { createRoom };\r\n","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\logUtils.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\urlUtils.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\Call\\Call.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\StartButton\\StartButton.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\Tray\\Tray.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\Call\\callState.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\Tile\\Tile.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\CallMessage\\CallMessage.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\TrayButton\\TrayButton.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\Icon\\Icon.js",[],["166","167"],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\history.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\SignUp.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\SignIn.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\HomePage\\Blog.js",["168"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport Header from './Header';\nimport MainFeaturedPost from './MainFeaturedPost';\nimport FeaturedPost from './FeaturedPost';\nimport Main from './Main';\nimport Sidebar from './Sidebar';\nimport Footer from './Footer';\nimport post1 from './blog-post.1.md';\nimport post2 from './blog-post.2.md';\nimport post3 from './blog-post.3.md';\n\nconst useStyles = makeStyles((theme) => ({\n  mainGrid: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst sections = [\n  { title: 'Book Beds', url: '#' },\n  { title: 'Scan Centers', url: '#' },\n  { title: 'Vaccine Centers', url: '#' },\n  { title: 'Quarantine Centers', url: '#' },\n  { title: 'Relief Centers', url: '#' },\n  { title: 'Fact Check', url: '#' },\n  { title: 'Health Care', url: '#' },\n  { title: 'About COVID', url: '#' },\n];\n\nconst mainFeaturedPost = {\n  title: 'COVID - 19',\n  description:\n    \"Finding beds for COVID has never been easier before. In this application you can find all the vacant beds near you\",\n  image: 'https://images.unsplash.com/photo-1583324113626-70df0f4deaab?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&dl=cdc-w9KEokhajKw-unsplash.jpg',\n  imgText: 'main image description',\n  linkText: 'Book Beds',\n};\n\nconst featuredPosts = [\n  {\n    title: 'How COVID spreads ?',\n    date: 'Nov 12',\n    description:\n      'This article gives clear picture on how COVID spreads and what measures to avoid the spread!',\n    image: 'https://www.acepnow.com/wp-content/uploads/2020/03/coronavirus-shutterstock_1643947495_WEB-1.jpg',\n    imageText: 'Image Text',\n  },\n  {\n    title: 'Post title',\n    date: 'Nov 11',\n    description:\n      'This is a wider card with supporting text below as a natural lead-in to additional content.',\n    image: 'http://hosana-medica.com/wp-content/uploads/2020/03/CORONA-HD.jpg',\n    imageText: 'Image Text',\n  },\n];\n\nconst posts = [post1, post2, post3];\n\nconst sidebar = {\n  title: 'About',\n  description:\n    'Helping patients infected with COVID-19 find vacent beds in hospitals.',\n  archives: [\n    { title: 'March 2021', url: '#' },\n    { title: 'February 2021', url: '#' },\n    { title: 'January 2021', url: '#' },\n    { title: 'December 2020', url: '#' },\n    { title: 'November 2020', url: '#' },\n    { title: 'October 2020', url: '#' },\n    { title: 'September 2020', url: '#' },\n    { title: 'August 2020', url: '#' },\n    { title: 'July 2020', url: '#' },\n    { title: 'June 2020', url: '#' },\n    { title: 'May 2020', url: '#' },\n    { title: 'April 2020', url: '#' },\n  ],\n  social: [\n    { name: 'Twitter', icon: TwitterIcon },\n    { name: 'Facebook', icon: FacebookIcon },\n  ],\n};\n\nexport default function Blog() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Header title=\"Quarantine Me\" sections={sections} />\n        <main>\n          <MainFeaturedPost post={mainFeaturedPost} />\n          <Grid container spacing={4}>\n            {featuredPosts.map((post) => (\n              <FeaturedPost key={post.title} post={post} />\n            ))}\n          </Grid>\n          <Grid container spacing={5} className={classes.mainGrid}>\n            <Main title=\"COVID Tracker\" posts={posts} />\n            <Sidebar\n              title={sidebar.title}\n              description={sidebar.description}\n              archives={sidebar.archives}\n              social={sidebar.social}\n            />\n          </Grid>\n        </main>\n      </Container>\n      <Footer title=\"Quarantine Me\" description=\"Let's save Lives!\" />\n    </React.Fragment>\n  );\n}\n","C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\HomePage\\Main.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\HomePage\\Footer.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\HomePage\\Header.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\HomePage\\MainFeaturedPost.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\HomePage\\Sidebar.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\HomePage\\FeaturedPost.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\HomePage\\Markdown.js",[],"C:\\Users\\HP\\Desktop\\Download\\spring-cloud-loadbalance-eureka-master\\react-frontend\\src\\components\\HomePage\\history.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":5,"column":8,"nodeType":"175","messageId":"176","endLine":5,"endColumn":13},{"ruleId":"177","severity":1,"message":"178","line":108,"column":22,"nodeType":"179","messageId":"180","endLine":108,"endColumn":24},{"ruleId":"181","severity":1,"message":"182","line":163,"column":25,"nodeType":"183","endLine":163,"endColumn":112},{"ruleId":"181","severity":1,"message":"182","line":318,"column":25,"nodeType":"183","endLine":318,"endColumn":112},{"ruleId":"184","severity":1,"message":"185","line":27,"column":1,"nodeType":"186","endLine":27,"endColumn":31},{"ruleId":"169","replacedBy":"187"},{"ruleId":"171","replacedBy":"188"},{"ruleId":"173","severity":1,"message":"189","line":6,"column":8,"nodeType":"175","messageId":"176","endLine":6,"endColumn":18},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'Video' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["190"],["191"],"'GitHubIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]